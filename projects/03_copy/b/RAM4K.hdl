// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way16(in=load,sel=address[9..11],a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h);
	RAM512(in=in,load=a,address=[0..8],out=ra);
	RAM512(in=in,load=b,address=[0..8],out=rb);
	RAM512(in=in,load=c,address=[0..8],out=rc);
	RAM512(in=in,load=d,address=[0..9],out=rd);
	RAM512(in=in,load=e,address=[0..9],out=re);
	RAM512(in=in,load=f,address=[0..9],out=rf);
	RAM512(in=in,load=g,address=[0..9],out=rg);
	RAM512(in=in,load=h,address=[0..9],out=rh);
	Mux8Way16(a=ra,b=rb,c=rc,d=rd,e=re,f=rf,g=rg,h=rh,sel=address[9..11],out=out);	
	
}
